verbosity = 3

[server]
# exit session if no requests were received during given period in seconds
# works only in unix sockets mode (-s/--session)
# set to 0 to disable
timeout = 1800 # seconds = 30 minutes

[language.elixir]
filetypes = ["elixir"]
roots = [".git", "mix.exs"]
command = "sh"
args = ["/home/andreas/.local/bin/elsp/language_server.sh"]

[language.java]
filetypes = ["java"]
roots = [".git"]
command = "sh"
args = ["/home/andreas/.local/bin/java-lsp.sh"]

[language.aya]
filetypes = ["aya"]
roots = [".git"]
command = "/home/andreas/aya-dev/lsp/build/image/bin/aya-lsp"
args = ["--mode=debug"]

[language.rust]
filetypes = ["rust"]
roots = ["Cargo.toml"]
command = "rls"

[language.monotonelang]
filetypes = ["monotonelang"]
roots = [".monotonelang"]
command = "node"
args = ["/home/andreas/anti-db/monotone_lang/dist/language_server.js", "--stdio"]

[language.typescript]
filetypes = ["javascript", "typescript"]
roots = ["package.json"]
command = "typescript-language-server"
args = ["--stdio"]

[language.typescriptreact]
filetypes = ["typescriptreact"]
roots = ["package.json"]
command = "typescript-language-server"
args = ["--stdio"]

[language.clojure]
filetypes = ["clojure"]
roots = ["project.clj"]
command = "bash"
args = ["-c", "~/.local/bin/clojure-lsp"]

[language.json]
filetypes = ["json"]
roots = ["package.json"]
command = "json-languageserver"
args = ["--stdio"]

[language.css]
filetypes = ["css"]
roots = ["package.json"]
command = "css-languageserver"
args = ["--stdio"]

[language.html]
filetypes = ["html"]
roots = ["package.json"]
command = "html-languageserver"
args = ["--stdio"]

[language.ocaml]
filetypes = ["ocaml"]
roots = ["*.opam"]
command = "ocamllsp"

[language.reason]
filetypes = ["reason"]
roots = ["package.json", "Makefile", ".git", ".hg"]
command = "ocaml-language-server"
args = ["--stdio"]

[language.python]
filetypes = ["python"]
roots = ["requirements.txt", "setup.py", ".git", ".hg"]
command = "pyls"

[language.c_cpp]
filetypes = ["c", "cpp"]
roots = ["compile_commands.json", ".cquery"]
command = "cquery"
args = ["--init={\"cacheDirectory\":\"/tmp/cquery\",\"highlight\":{\"enabled\":true}}"]

[language.haskell]
filetypes = ["haskell"]
roots = ["Setup.hs", "stack.yaml", "*.cabal"]
command = "hie"
args = ["--lsp"]

[language.go]
filetypes = ["go"]
roots = ["Gopkg.toml", "go.mod", ".git", ".hg"]
command = "go-langserver"
args = ["-mode", "stdio", "-gocodecompletion"]

[language.bash]
filetypes = ["sh"]
roots = [".git", ".hg"]
command = "bash-language-server"
args = ["start"]

[language.dart]
filetypes = ["dart"]
roots = ["pubspec.yaml", ".git"]
command = "dart_language_server"

[language.d]
filetypes = ["d", "di"]
roots = [".git", "dub.sdl", "dub.json"]
command = "dls"

[language.racket]
filetypes = ["racket"]
roots = ["info.rkt"]
command = "racket-language-server"
args = ["--stdio"]
