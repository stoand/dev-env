hook global InsertChar k %{ try %{
  exec -draft hH <a-k>jk<ret> d
  exec <esc>
}}

set global tabstop 4
set global ui_options ncurses_assistant=off

# Hook global write
hook global NormalIdle .* write-all

# Set leader key
map global normal <space> , -docstring 'leader'

# Git commit
map global user a ':eval %sh{git add "${kak_bufname}"; git add -u}; git commit<ret>' -docstring 'Commit and push'

map global user b ':fzf-buffer<ret>' -docstring 'Fuzzy find buffer'

# Comment
map global user c ':comment-line<ret>' -docstring 'Comment'

# Definition
map global user d ':lsp-definition<ret>' -docstring 'LSP Definition'

# Search
map global user e ':grep %val{selection} --exclude-dir=target --exclude-dir=node_modules<ret>' -docstring 'Search for selection'

# Format
map global user f ':lsp-formatting-sync<ret>' -docstring 'LSP Format'

map global user g ':fzf-edit<ret>' -docstring 'Fuzzy find git file'

# LSP Diagnostics
map global user h ':lsp-diagnostics<ret>' -docstring 'LSP Diagnostics'

# Git Diff
map global user i ':git diff<ret>' -docstring 'Git Diff'

# Paste
map global user p '<a-!>xsel --output --clipboard<ret>' -docstring 'Paste'

# References
map global user r ':lsp-references<ret>' -docstring 'LSP References'

map global user s ':surround<ret><b>' -docstring 'Surround ()'
map global user S ':delete-surround<ret><b>' -docstring 'Unsurround ()'

# Quit
map global user q ':waq<ret>' -docstring 'Write and Quit'

# Write
map global user w ':wa<ret>' -docstring 'Write'

# Copy
hook global NormalKey y|d|c %{ nop %sh{
  printf %s "$kak_main_reg_dquote" | xsel --input --clipboard
}}

# Fuzzy Find File
define-command -docstring 'Invoke fzf to open a file' -params 0 fzf-edit %{
    evaluate-commands %sh{
        if [ -z "${kak_client_env_TMUX}" ]; then
            printf 'fail "client was not started under tmux"\n'
        else
            file="$(git ls-files |TMUX="${kak_client_env_TMUX}" fzf-tmux -d 15)"
            if [ -n "$file" ]; then
                printf 'edit "%s"\n' "$file"
            fi
        fi
    }
}
# Fuzzy Find Buffer
define-command -docstring 'Invoke fzf to select a buffer' fzf-buffer %{
    evaluate-commands %sh{
        BUFFER=$(
            (
                eval "set -- $kak_buflist"
                while [ $# -gt 0 ]; do
                    printf "%s\0" "$1"
                    shift
                done
            ) |
            fzf-tmux -d 15 --read0
        )
        if [ -n "$BUFFER" ]; then
            printf 'buffer "%s"\n' "${BUFFER}"
        fi
    }
}


# Adapted from the smarttab plugin
hook global InsertDelete ' ' %{ try %sh{
    if [ $kak_opt_tabstop -gt 1 ]; then
       printf "%s\n" 'execute-keys -draft "<a-h><a-k>^\h+.\z<ret>I<space><esc><lt>"'
    fi
    } catch %{ try %{
        execute-keys -itersel -draft "h%opt{tabstop}<s-h>2<s-l>s\h+\z<ret>d"
    }
}}

source ~/.kakoune-idris/idris.kak
source ~/.kakoune-formality/formality.kak
source ~/.kakoune-surround/surround.kak

eval %sh{kak-lsp --kakoune -s $kak_session}
lsp-enable

lsp-auto-hover-enable
